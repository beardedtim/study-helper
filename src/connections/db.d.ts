/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface GooseDbVersion {
  id: Generated<number>;
  is_applied: boolean;
  tstamp: Generated<Timestamp | null>;
  version_id: Int8;
}

export interface NoteReferences {
  note_id: string;
  ref: string;
}

export interface Notes {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  note: string;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  goose_db_version: GooseDbVersion;
  note_references: NoteReferences;
  notes: Notes;
}
